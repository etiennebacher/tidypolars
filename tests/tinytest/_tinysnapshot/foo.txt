function (current, label, mode = getOption("tinysnapshot_mode", 
    default = "unified"), format = getOption("tinysnapshot_format", 
    default = "ansi256"), ...) 
{
    snapshot <- snapshot_label(label)
    snapshot_fn <- file.path("_tinysnapshot", paste0(snapshot, 
        ".txt"))
    cal <- sys.call(sys.parent(1))
    diff <- info <- NA_character_
    fail <- FALSE
    if (!isTRUE(ts_check_file_exists(snapshot_fn))) {
        if (isTRUE(tinytest::at_home())) {
            dir.create(dirname(snapshot_fn), showWarnings = FALSE, 
                recursive = TRUE)
            sink(snapshot_fn)
            print(current)
            sink()
            info <- paste("Creating snapshot:", snapshot_fn)
        }
        else {
            info <- "Snapshot missing: %s. Make sure you execute commands in the right directory, or use one of the `tinytest` runners to generate new snapshots: `run_test_dir()` or `run_test_file()`."
            info <- sprintf(info, snapshot_fn)
            stop(info, call. = FALSE)
        }
        return(tinytest::tinytest(FALSE, call = cal, info = info))
    }
    print.tinysnapshotprint <- function(x) cat(x)
    target <- readChar(snapshot_fn, file.info(snapshot_fn)$size)
    class(target) <- c("tinysnapshotprint", class(target))
    do <- diffobj::diffPrint(current, target, mode = "unified", 
        format = format, ...)
    if (suppressWarnings(any(do))) {
        fail <- TRUE
        diff <- paste(as.character(do), collapse = "\n")
        info <- paste("Snapshot:", snapshot_fn)
    }
    tinytest::tinytest(result = !fail, call = cal, info = info, 
        diff = diff)
}
<bytecode: 0x0000014b8db8aff0>
<environment: namespace:tinysnapshot>
function (current, label, mode = getOption("tinysnapshot_mode", 
    default = "unified"), format = getOption("tinysnapshot_format", 
    default = "ansi256"), ...) 
{
    snapshot <- snapshot_label(label)
    snapshot_fn <- file.path("_tinysnapshot", paste0(snapshot, 
        ".txt"))
    cal <- sys.call(sys.parent(1))
    diff <- info <- NA_character_
    fail <- FALSE
    if (!isTRUE(ts_check_file_exists(snapshot_fn))) {
        if (isTRUE(tinytest::at_home())) {
            dir.create(dirname(snapshot_fn), showWarnings = FALSE, 
                recursive = TRUE)
            sink(snapshot_fn)
            print(current)
            sink()
            info <- paste("Creating snapshot:", snapshot_fn)
        }
        else {
            info <- "Snapshot missing: %s. Make sure you execute commands in the right directory, or use one of the `tinytest` runners to generate new snapshots: `run_test_dir()` or `run_test_file()`."
            info <- sprintf(info, snapshot_fn)
            stop(info, call. = FALSE)
        }
        return(tinytest::tinytest(FALSE, call = cal, info = info))
    }
    print.tinysnapshotprint <- function(x) cat(x)
    target <- readChar(snapshot_fn, file.info(snapshot_fn)$size)
    class(target) <- c("tinysnapshotprint", class(target))
    do <- diffobj::diffPrint(current, target, mode = "unified", 
        format = format, ...)
    if (suppressWarnings(any(do))) {
        fail <- TRUE
        diff <- paste(as.character(do), collapse = "\n")
        info <- paste("Snapshot:", snapshot_fn)
    }
    tinytest::tinytest(result = !fail, call = cal, info = info, 
        diff = diff)
}
<bytecode: 0x0000014b8db8aff0>
<environment: namespace:tinysnapshot>
