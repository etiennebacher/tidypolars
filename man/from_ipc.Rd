% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read_scan.R
\name{from_ipc}
\alias{from_ipc}
\alias{read_ipc_polars}
\alias{scan_ipc_polars}
\title{Import data from IPC file(s)}
\usage{
read_ipc_polars(
  source,
  ...,
  n_rows = NULL,
  row_index_name = NULL,
  row_index_offset = 0L,
  rechunk = FALSE,
  cache = TRUE,
  include_file_paths = NULL,
  memory_map
)

scan_ipc_polars(
  source,
  ...,
  n_rows = NULL,
  row_index_name = NULL,
  row_index_offset = 0L,
  rechunk = FALSE,
  cache = TRUE,
  include_file_paths = NULL,
  memory_map
)
}
\arguments{
\item{source}{Path(s) to a file or directory. When needing to authenticate
for scanning cloud locations, see the \code{storage_options} parameter.}

\item{...}{These dots are for future extensions and must be empty.}

\item{n_rows}{Stop reading from the source after reading \code{n_rows}.}

\item{row_index_name}{If not \code{NULL}, this will insert a row index column with
the given name.}

\item{row_index_offset}{Offset to start the row index column (only used if
the name is set by \code{row_index_name}).}

\item{rechunk}{Reallocate to contiguous memory when all chunks/files are parsed.}

\item{cache}{Cache the result after reading.}

\item{include_file_paths}{Include the path of the source file(s) as a column
with this name.}

\item{memory_map}{\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#deprecated}{\figure{lifecycle-deprecated.svg}{options: alt='[Deprecated]'}}}{\strong{[Deprecated]}} Deprecated
with no replacement.}
}
\value{
The scan function returns a LazyFrame, the read function returns a DataFrame.
}
\description{
\code{read_ipc_polars()} imports the data as a Polars DataFrame.

\code{scan_ipc_polars()} imports the data as a Polars LazyFrame.
}
\examples{
\dontshow{if (require("dplyr", quietly = TRUE) && require("arrow", quietly = TRUE)) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
### Read or scan a single IPC file ------------------------

# Setup: create an IPC file
dest <- tempfile(fileext = ".ipc")
arrow::write_ipc_file(mtcars, file(dest))

# Import this file as a DataFrame for eager evaluation
read_ipc_polars(dest) |>
  arrange(mpg)

# Import this file as a LazyFrame for lazy evaluation
scan_ipc_polars(dest) |>
  arrange(mpg) |>
  compute()


### Read or scan several all IPC files in a folder ------------------------

# Setup: create a folder "output" that contains two IPC files
dest_folder <- file.path(tempdir(), "output")
dir.create(dest_folder, showWarnings = FALSE)
dest1 <- file.path(dest_folder, "output_1.ipc")
dest2 <- file.path(dest_folder, "output_2.ipc")

arrow::write_ipc_file(mtcars[1:16, ], dest1)
arrow::write_ipc_file(mtcars[17:32, ], dest2)
list.files(dest_folder)

# Import all files as a LazyFrame
scan_ipc_polars(dest_folder) |>
  arrange(mpg) |>
  compute()


### Read or scan all IPC files that match a glob pattern ------------------------

# Setup: create a folder "output" that contains three IPC files,
# two of which follow the pattern "output_XXX.ipc"
dest_folder <- file.path(tempdir(), "output_glob")
dir.create(dest_folder, showWarnings = FALSE)
dest1 <- file.path(dest_folder, "output_1.ipc")
dest2 <- file.path(dest_folder, "output_2.ipc")
dest3 <- file.path(dest_folder, "other_output.ipc")

arrow::write_ipc_file(mtcars[1:16, ], dest1)
arrow::write_ipc_file(mtcars[17:32, ], dest2)
arrow::write_ipc_file(iris, dest3)
list.files(dest_folder)

# Import only the files whose name match "output_XXX.ipc" as a LazyFrame
scan_ipc_polars(paste0(dest_folder, "/output_*.ipc")) |>
  arrange(mpg) |>
  compute()
\dontshow{\}) # examplesIf}
}
