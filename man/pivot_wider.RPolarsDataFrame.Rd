% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pivot_wider.R
\name{pivot_wider.RPolarsDataFrame}
\alias{pivot_wider.RPolarsDataFrame}
\alias{pivot_wider.RPolarsLazyFrame}
\title{Pivot Data/LazyFrame from long to wide}
\usage{
\method{pivot_wider}{RPolarsDataFrame}(
  data,
  ...,
  names_from,
  values_from,
  names_prefix = "",
  names_sep = "_",
  names_glue = NULL,
  values_fill = NULL
)

\method{pivot_wider}{RPolarsLazyFrame}(
  data,
  ...,
  names_from,
  values_from,
  names_prefix = "",
  names_sep = "_",
  names_glue = NULL,
  values_fill = NULL
)
}
\arguments{
\item{data}{A Polars Data/LazyFrame}

\item{...}{Not used.}

\item{names_from}{The (quoted or unquoted) column name whose values will be
used for the names of the new columns.}

\item{values_from}{The (quoted or unquoted) column name whose values will be
used to fill the new columns.}

\item{names_prefix}{String added to the start of every variable name. This is
particularly useful if \code{names_from} is a numeric vector and you want to
create syntactic variable names.}

\item{names_sep}{If \code{names_from} or \code{values_from} contains multiple
variables, this will be used to join their values together into a single
string to use as a column name.}

\item{names_glue}{Instead of \code{names_sep} and \code{names_prefix}, you can supply a
\code{glue} specification that uses the \code{names_from} columns to create custom
column names.}

\item{values_fill}{A scalar that will be used to replace missing values in
the new columns. Note that the type of this value will be applied to new
columns. For example, if you provide a character value to fill numeric
columns, then all these columns will be converted to character.}
}
\description{
Pivot Data/LazyFrame from long to wide
}
\examples{
\dontshow{if (require("dplyr", quietly = TRUE) && require("tidyr", quietly = TRUE)) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
pl_fish_encounters <- polars::pl$DataFrame(tidyr::fish_encounters)

pl_fish_encounters |>
  pivot_wider(names_from = station, values_from = seen)

pl_fish_encounters |>
  pivot_wider(names_from = station, values_from = seen, values_fill = 0)

# be careful about the type of the replacement value!
pl_fish_encounters |>
  pivot_wider(names_from = station, values_from = seen, values_fill = "a")
\dontshow{\}) # examplesIf}
}
