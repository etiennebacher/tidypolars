% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/complete.R
\name{complete.RPolarsDataFrame}
\alias{complete.RPolarsDataFrame}
\alias{complete.RPolarsLazyFrame}
\title{Complete a data frame with missing combinations of data}
\usage{
\method{complete}{RPolarsDataFrame}(data, ..., fill = list(), explicit = TRUE)

\method{complete}{RPolarsLazyFrame}(data, ..., fill = list(), explicit = TRUE)
}
\arguments{
\item{data}{A Polars Data/LazyFrame}

\item{...}{Any expression accepted by \code{dplyr::select()}: variable names,
column numbers, select helpers, etc.

When used with continuous variables, you may need to fill in values that do
not appear in the data: to do so use expressions like \code{year = 2010:2020} or
\code{year = full_seq(year, 1)}.}

\item{fill}{A named list that for each variable supplies a single value to
use instead of \code{NA} for missing combinations.}

\item{explicit}{Should both implicit (newly created) and explicit
(pre-existing) missing values be filled by \code{fill}? By default, this is
\code{TRUE}, but if set to \code{FALSE} this will limit the fill to only implicit
missing values.}
}
\description{
Turns implicit missing values into explicit missing values. This is useful
for completing missing combinations of data.
}
\examples{
\dontshow{if (require("dplyr", quietly = TRUE) && require("tidyr", quietly = TRUE)) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
df <- polars::pl$DataFrame(
  group = c(1:2, 1, 2),
  item_id = c(1:2, 2, 3),
  item_name = c("a", "a", "b", "b"),
  value1 = c(1, NA, 3, 4),
  value2 = 4:7
)
df

df |> complete(group, item_id, item_name)

# Use `fill` to replace NAs with some value. By default, affects both new
# (implicit) and pre-existing (explicit) missing values.
df |>
  complete(
    group, item_id, item_name,
    fill = list(value1 = 0, value2 = 99)
  )

# Limit the fill to only the newly created (i.e. previously implicit)
# missing values with `explicit = FALSE`
df |>
  complete(
    group, item_id, item_name,
    fill = list(value1 = 0, value2 = 99),
    explicit = FALSE
  )

df |>
  group_by(group, maintain_order = TRUE) |>
  complete(item_id, item_name)
\dontshow{\}) # examplesIf}
}
