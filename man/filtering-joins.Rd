% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/join.R
\name{semi_join.DataFrame}
\alias{semi_join.DataFrame}
\alias{anti_join.DataFrame}
\title{Filtering joins}
\usage{
\method{semi_join}{DataFrame}(x, y, by = NULL)

\method{anti_join}{DataFrame}(x, y, by = NULL)
}
\arguments{
\item{x, y}{Two Polars Data/LazyFrames}
}
\description{
Filtering joins filter rows from \code{x} based on the presence or absence of
matches in \code{y}:
\itemize{
\item \code{semi_join()} return all rows from \code{x} with a match in \code{y}.
\item \code{anti_join()} return all rows from \code{x} without a match in \code{y}.
}
}
\examples{
test <- polars::pl$DataFrame(
  x = c(1, 2, 3),
  y = c(1, 2, 3),
  z = c(1, 2, 3)
)
test2 <- polars::pl$DataFrame(
  x = c(1, 2, 4),
  y = c(1, 2, 4),
  z2 = c(1, 2, 4)
)
test
test2
# only keep the rows of `test` that have matching keys in `test2`
semi_join(test, test2, by = c("x", "y"))
# only keep the rows of `test` that don't have matching keys in `test2`
anti_join(test, test2, by = c("x", "y"))
}
